//© A+ Computer Science  -  www.apluscompsci.com
//Name - Jaz Harris
//Date - 12/18/13
//Lab  - Spinner Critter

import java.awt.Color;
import java.util.ArrayList;
import info.gridworld.grid.Grid;
import info.gridworld.actor.Rock;
import info.gridworld.actor.Actor;
import info.gridworld.actor.Critter;
import info.gridworld.grid.Location;

public class SpinnerCritter extends Critter
{
  //processActors will make each actor around this actor move to the left
  public void processActors(ArrayList<Actor> actors)
  {
    Location[] locs = new Location[8];//making a new Array to hold the old positions
    Actor[] holdActors = new Actor[8];// making a new Array to hold the old actors
    for(int i = actors.size() - 1; i >=0; i--)//for loop to go through each index 
    {
      if(locs[i] != null)
      {
      locs[i] = actors.get(i).getLocation();//storing the locations
      holdActors[i] = actors.get(i);//and storing the actors
      actors.get(i).removeSelfFromGrid();//then get rid of all actors around critter
      }
    }
    for(int i = holdActors.length - 1; i >= 0; i--)//loop through all of the arraylist
    {
      if(holdActors[i] instanceof Rock && !(holdActors[i + 1] instanceof Actor))//if the actor is a rock at this index
      {
        holdActors[i].moveTo(locs[i]);//move it back to the original place
      }
      else//otherwise if the actor is anything but a rock
      {
        if(!(holdActors[i - 1] instanceof Actor))//if there's a rock or blank in the desired move spot
        {
          if(i > 0)//shifting locs then moving the actor to the new location
          {
            holdActors[i].moveTo(locs[i-1]);
          }
          else//if it's the first location, move to the last location
          {
            holdActors[i].moveTo(locs[8]);
          }
        }
      }
    }
  }
}